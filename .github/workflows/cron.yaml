name: Cron

on:
  schedule:
    # run this once a week (sunday midnight) to preserve cache
    # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows#usage-limits-and-eviction-policy
    - cron:  '0 0 * * 0'

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup JupyterBook Cache
      uses: actions/cache@v2
      # NOTE: change key to "jupyterbook-N+1" to force rebuilding cache
      with:
        path: ./book/_build
        key: jupyterbook

    - name: Setup Conda Cache
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('binder/conda-linux-64.lock') }}

    - name: Setup Conda Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
        auto-update-conda: false
        environment-file: binder/conda-linux-64.lock #or binder/environment.yml
        activate-environment: hackweek
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Build JupyterBook
      run: |
        jb build book

    - name: Save Build
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: book/_build/
