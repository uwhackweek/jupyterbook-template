name: Test

on:
  pull_request_target:
    types: [labeled, synchronize]
    paths:
      - 'book/**'
      - '.github/workflows/test.yaml'
      - 'binder/**'
    branches:
      - main

jobs:
  quality-control:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('binder/conda-linux-64.lock') }}

    - name: Setup Conda Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
        auto-update-conda: false
        environment-file: binder/conda-linux-64.lock #or binder/environment.yml
        activate-environment: hackweek
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    # NOTE: this isn't a comprehensive spellcheck, just common typos
    - name: Spellcheck
      uses: codespell-project/actions-codespell@master
      with:
        check_filenames: true
        check_hidden: true
        only_warn: true

    - name: Ensure clean notebooks
      run: |
        pip install nb-clean
        find book -name "*ipynb" | xargs nb-clean check

  build-and-test:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    # This workflow accesses secrets and checks out a PR, so only run if labelled
    # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
    if: contains(github.event.pull_request.labels.*.name, 'preview')

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Setup JupyterBook Cache
      uses: actions/cache@v2
      # NOTE: change key to "jupyterbook-N+1" to force rebuilding cache
      with:
        path: ./book/_build
        key: jupyterbook

    - name: Setup Conda Cache
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('binder/conda-linux-64.lock') }}

    - name: Setup Conda Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
        auto-update-conda: false
        environment-file: binder/conda-linux-64.lock #or binder/environment.yml
        activate-environment: hackweek
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Build JupyterBook
      run: |
        jb build book

    - name: Check External Links
      run: |
        jb build book --builder linkcheck

    - name: Save Build
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: book/_build/
